pipeline {
    agent {
        label 'autoqa-vm-1'
    }

    environment {
        AWS_ACCESS_KEY_ID     = ''
        AWS_SECRET_ACCESS_KEY = ''
    }

    options {
        timeout(time: 120, unit: 'MINUTES')
        timestamps()

    }

    triggers {

        cron('H 20 * * *')
    }

    parameters {
        string(name: 'TestPlanNumber', defaultValue: 'TEST-18383', description: 'Master Test plan number to clone', trim: true)
        string(name: 'TEs_To_Exclude', description: 'Space separated TEs from template TP which you want to exclude from execution.', trim: true)
        string(name: 'Target_Node', description: 'Name of target setup mentioned in database', trim: true)
        string(name: 'Setup_Type', defaultValue: 'default', description: 'Either of default/isolated/nearfull', trim: true)
        choice(name: 'Platform_Type', choices: ['VM', 'HW', 'OVA'], description: 'Is target a VM or a HW or an OVA?')
        text(name: 'DESC', description: 'This job triggers CSM GUI, Cortx-test and Load tests in parallel')
        string(name: 'Nodes_In_Target', defaultValue: '1', description: 'Number of nodes in target: 1 or 3 or N', trim: true)
        string(name: 'Server_Type', description: 'HPC/DELL/SMC', trim: true)
        string(name: 'Enclosure_Type', defaultValue: '5U84',description: '5U84/PODS/JBOD', trim: true)
        string(name: 'Build', description: 'Build number of target', trim: true)
        string(name: 'Build_Branch', defaultValue: 'stable', description: 'Branch name from which build is cut stable/main', trim: true)
        credentials(
                credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
                defaultValue: '',
                description: 'JIRA Credentials.',
                name: 'JIRA_CRED',
                required: true)
        string(name: 'Git_Branch_Name', defaultValue: 'dev', description: 'Branch name of Cortx-test', trim: true)
        booleanParam(name: 'Need_pip_source', description: 'Tick this if you want to add source in requirements installation. e.g. pip3 install -r requirements.txt -i https://pypi.python.org/simple/')
        booleanParam(name: 'DB_Update', description: 'Tick this if you want to push test execution data to database')
        booleanParam(name: 'Sequential_Execution', description: 'Tick this if you want to have sequential execution')
        string(name: 'Process_Cnt_Parallel_Exe', defaultValue: '2', description: 'If Sequential Execution is not selected, then provide number of parallel process to run.', trim: true)
        password(name: 'DB_SERVER_PWD', description: 'Enter MONGODB password')

        string(name: 'CSM_URL', defaultValue: 'https://10.237.65.78:28100/#', description: 'URL of application like https://10.237.65.78:28100/#', trim: true)

        choice(name: 'BROWSER', choices: ['chrome', 'firefox'], description: 'Browsers')

        string(name: 'CSM_USERNAME', defaultValue: 'administrator', trim: true)
        string(name: 'CSM_PASSWORD', defaultValue: 'Admin@123', trim: true)
        choice(name: 'HEADLESS', choices: ['True', 'False'], description: 'Headless mode')

        choice(name: 'TestCaseType', choices: ['ALL', 'FAIL', 'PASS', 'TODO'], description: 'Choice of test cases for CSM GUI')

    }

    stages {
        stage('Health Check') {
            steps {
                echo "Executing Health Check on setup."
            }
        }
        stage('Executing Load, API and UI Tests in parallel') {
            parallel {
                stage('Cortx-Text Automation Trigger') {
                    steps {
                        script {
                            def name = "${params.TestPlanNumber}"
                            echo "Executing $name"

                        }
                        echo "Here trigger job: Dummy_QA_R2_Single_Runner. Triggered at time:"
                        sh(script: "date -u")

                        catchError {
                            build job: 'Dummy_QA_R2_Single_Runner', parameters: [string(name: 'Target_Node', value: params['Target_Node'])]

                        }
                        echo currentBuild.result
                        // setup env..
                        // copy the deployment unit from another Job...
                        step ([$class: 'CopyArtifact',
                               projectName: 'Dummy_QA_R2_Single_Runner',
                               filter: 'log/**']);

                    }
                }
                stage('CSM UI Robot Tests Trigger') {
                    environment {
                        JOB_TIME = sh (returnStdout: true, script: "date '+%A %W %Y %X'").trim()
                    }
                    steps {
                        echo "Here trigger job: jenkins_job_2. Triggered at time:"
                        sh(script: "date -u")
                        echo "Here trigger job: dummy-qa-r2-robot-runner. Triggered at time:"
                        sh(script: """date -u""")
                        catchError {
                            build job: 'dummy-qa-r2-robot-runner', parameters: [string(name: 'Target_Node', value: params['Target_Node'])]
                        }
                        echo currentBuild.result
                        step ([$class: 'CopyArtifact',
                               projectName: 'dummy-qa-r2-robot-runner',
                               filter: '*/**']);
                    }
                }
            }
        }

    }

    post {
        always {
            echo 'The top level job has executed'
        }
        success {
            echo "The pipeline ${currentBuild.fullDisplayName} completed successfully."
        }
        failure {
            mail to: 'sarang.sawant@seagate.com',
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is wrong with ${env.BUILD_URL}"
        }
        unstable {
            echo 'This run was marked as unstable'
        }
        changed {
            echo 'Pipeline was previously failing but is now successful OR it was passing earlier and now its failing'
        }

    }
}
